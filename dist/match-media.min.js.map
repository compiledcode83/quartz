{"version":3,"sources":["match-media.min.js"],"names":["window","matchMedia","styleMedia","media","style","document","createElement","script","getElementsByTagName","info","type","id","parentNode","insertBefore","getComputedStyle","currentStyle","matchMedium","text","styleSheet","cssText","textContent","width","matches","addListener","localMatchMedia","hasMediaQueries","isListening","timeoutID","queries","handleChange","evt","clearTimeout","setTimeout","i","il","length","mql","listeners","j","jl","call","index","listener","addEventListener","push","removeListener","splice"],"mappings":";AAEAA,OAAOC,aAAeD,OAAOC,WAAa,WACtC,YAGA,IAAIC,GAAcF,OAAOE,YAAcF,OAAOG,KAG9C,KAAKD,EAAY,CACb,GAAIE,GAAcC,SAASC,cAAc,SACrCC,EAAcF,SAASG,qBAAqB,UAAU,GACtDC,EAAc,IAElBL,GAAMM,KAAQ,WACdN,EAAMO,GAAQ,oBAEdJ,EAAOK,WAAWC,aAAaT,EAAOG,GAGtCE,EAAQ,oBAAsBT,SAAWA,OAAOc,iBAAiBV,EAAO,OAASA,EAAMW,aAEvFb,GACIc,YAAa,SAASb,GAClB,GAAIc,GAAO,UAAYd,EAAQ,wCAU/B,OAPIC,GAAMc,WACNd,EAAMc,WAAWC,QAAUF,EAE3Bb,EAAMgB,YAAcH,EAIF,QAAfR,EAAKY,QAKxB,MAAO,UAASlB,GACZ,OACImB,QAASpB,EAAWc,YAAYb,GAAS,OACzCA,MAAOA,GAAS;AAM3B,WAEG,GAAIH,OAAOC,YAAcD,OAAOC,WAAW,OAAOsB,YAC9C,OAAO,CAGX,IAAIC,GAAkBxB,OAAOC,WACzBwB,EAAkBD,EAAgB,YAAYF,QAC9CI,GAAkB,EAClBC,EAAkB,EAClBC,KACAC,EAAkB,SAASC,GAEvBC,aAAaJ,GAEbA,EAAYK,WAAW,WACnB,IAAK,GAAIC,GAAI,EAAGC,EAAKN,EAAQO,OAAYD,EAAJD,EAAQA,IAAK,CAC9C,GAAIG,GAAcR,EAAQK,GAAGG,IACzBC,EAAcT,EAAQK,GAAGI,cACzBf,EAAcE,EAAgBY,EAAIjC,OAAOmB,OAI7C,IAAIA,IAAYc,EAAId,QAAS,CACzBc,EAAId,QAAUA,CAEd,KAAK,GAAIgB,GAAI,EAAGC,EAAKF,EAAUF,OAAYI,EAAJD,EAAQA,IAC3CD,EAAUC,GAAGE,KAAKxC,OAAQoC,MAIvC,IAGXpC,QAAOC,WAAa,SAASE,GACzB,GAAIiC,GAAcZ,EAAgBrB,GAC9BkC,KACAI,EAAc,CAkClB,OAhCAL,GAAIb,YAAc,SAASmB,GAElBjB,IAMAC,IACDA,GAAc,EACd1B,OAAO2C,iBAAiB,SAAUd,GAAc,IAItC,IAAVY,IACAA,EAAQb,EAAQgB,MACZR,IAAcA,EACdC,UAAcA,KAItBA,EAAUO,KAAKF,KAGnBN,EAAIS,eAAiB,SAASH,GAC1B,IAAK,GAAIT,GAAI,EAAGC,EAAKG,EAAUF,OAAYD,EAAJD,EAAQA,IACvCI,EAAUJ,KAAOS,GACjBL,EAAUS,OAAOb,EAAG,IAKzBG","file":"match-media.min.js","sourcesContent":["/*! matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. Dual MIT/BSD license */\n\nwindow.matchMedia || (window.matchMedia = function() {\n    \"use strict\";\n\n    // For browsers that support matchMedium api such as IE 9 and webkit\n    var styleMedia = (window.styleMedia || window.media);\n\n    // For those that don't support matchMedium\n    if (!styleMedia) {\n        var style       = document.createElement('style'),\n            script      = document.getElementsByTagName('script')[0],\n            info        = null;\n\n        style.type  = 'text/css';\n        style.id    = 'matchmediajs-test';\n\n        script.parentNode.insertBefore(style, script);\n\n        // 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers\n        info = ('getComputedStyle' in window) && window.getComputedStyle(style, null) || style.currentStyle;\n\n        styleMedia = {\n            matchMedium: function(media) {\n                var text = '@media ' + media + '{ #matchmediajs-test { width: 1px; } }';\n\n                // 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers\n                if (style.styleSheet) {\n                    style.styleSheet.cssText = text;\n                } else {\n                    style.textContent = text;\n                }\n\n                // Test if media query is true or false\n                return info.width === '1px';\n            }\n        };\n    }\n\n    return function(media) {\n        return {\n            matches: styleMedia.matchMedium(media || 'all'),\n            media: media || 'all'\n        };\n    };\n}());\n\n/*! matchMedia() polyfill addListener/removeListener extension. Author & copyright (c) 2012: Scott Jehl. Dual MIT/BSD license */\n(function(){\n    // Bail out for browsers that have addListener support\n    if (window.matchMedia && window.matchMedia('all').addListener) {\n        return false;\n    }\n\n    var localMatchMedia = window.matchMedia,\n        hasMediaQueries = localMatchMedia('only all').matches,\n        isListening     = false,\n        timeoutID       = 0,    // setTimeout for debouncing 'handleChange'\n        queries         = [],   // Contains each 'mql' and associated 'listeners' if 'addListener' is used\n        handleChange    = function(evt) {\n            // Debounce\n            clearTimeout(timeoutID);\n\n            timeoutID = setTimeout(function() {\n                for (var i = 0, il = queries.length; i < il; i++) {\n                    var mql         = queries[i].mql,\n                        listeners   = queries[i].listeners || [],\n                        matches     = localMatchMedia(mql.media).matches;\n\n                    // Update mql.matches value and call listeners\n                    // Fire listeners only if transitioning to or from matched state\n                    if (matches !== mql.matches) {\n                        mql.matches = matches;\n\n                        for (var j = 0, jl = listeners.length; j < jl; j++) {\n                            listeners[j].call(window, mql);\n                        }\n                    }\n                }\n            }, 30);\n        };\n\n    window.matchMedia = function(media) {\n        var mql         = localMatchMedia(media),\n            listeners   = [],\n            index       = 0;\n\n        mql.addListener = function(listener) {\n            // Changes would not occur to css media type so return now (Affects IE <= 8)\n            if (!hasMediaQueries) {\n                return;\n            }\n\n            // Set up 'resize' listener for browsers that support CSS3 media queries (Not for IE <= 8)\n            // There should only ever be 1 resize listener running for performance\n            if (!isListening) {\n                isListening = true;\n                window.addEventListener('resize', handleChange, true);\n            }\n\n            // Push object only if it has not been pushed already\n            if (index === 0) {\n                index = queries.push({\n                    mql         : mql,\n                    listeners   : listeners\n                });\n            }\n\n            listeners.push(listener);\n        };\n\n        mql.removeListener = function(listener) {\n            for (var i = 0, il = listeners.length; i < il; i++){\n                if (listeners[i] === listener){\n                    listeners.splice(i, 1);\n                }\n            }\n        };\n\n        return mql;\n    };\n}());\n"],"sourceRoot":"/source/"}